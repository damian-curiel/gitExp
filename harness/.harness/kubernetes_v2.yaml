pipeline:
    name: kubernetes v2
    identifier: kubernetes_v2
    allowStageExecutions: false
    projectIdentifier: Latam_Arilines
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: account.githubdamianaccount
                repoName: GKE_demo_latam
                build: <+input>
    stages:
        - stage:
              name: Build Kubernetes
              identifier: Build_Kubernetes
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.LATAM_SE
                          namespace: harness-delegate
                  execution:
                      steps:
                          - step:
                                name: create yaml
                                identifier: create_yaml
                                template:
                                    templateRef: yaml_generation
                                    versionLabel: Version2
                          - step:
                                type: Run
                                name: git commit yaml
                                identifier: git_commit_yaml
                                spec:
                                    connectorRef: account.DockerDC
                                    image: alpine/git:latest
                                    command: |-
                                        echo "Uploading App.yaml generated..."

                                        git config user.email "damian.curiel@harness.io"
                                        git config user.name "damian-curiel"
                                        git add -f app.yaml
                                        git add -f values.yaml
                                        git status
                                        git commit -m "Add harness app.yaml and values.yaml file auto-generated"
                                        git remote set-url origin https://<+secrets.getValue("account.git_dc_pat")>@github.com/damian-curiel/GKE_demo_latam.git
                                        git push -u origin master --force
                          - step:
                                type: Run
                                name: Compile
                                identifier: Compile_Java
                                spec:
                                    connectorRef: account.DockerDC
                                    image: <+input>
                                    command: <+input>
                                when:
                                    stageStatus: Success
                                failureStrategies: []
                          - step:
                                type: RunTests
                                name: Test Intelligence
                                identifier: Test_Intelligence
                                spec:
                                    connectorRef: account.DockerDC
                                    image: maven:3-openjdk-8
                                    language: Java
                                    buildTool: Maven
                                    args: test
                                    packages: hello
                                    runOnlySelectedTests: true
                                    preCommand: cd tests/src/java-module/
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "**/*.xml"
                                when:
                                    stageStatus: Success
                                failureStrategies: []
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: Build and push image
                                identifier: Build_and_push_image
                                spec:
                                    connectorRef: account.DockerDC
                                    repo: fcuriel/latam
                                    tags:
                                        - GKE-<+pipeline.sequenceId>
                                failureStrategies: []
              when:
                  pipelineStatus: Success
        - stage:
              name: Deploy Kubernetes Dev
              identifier: Deploy_Kubernetes
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: k8s_sample_app
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: Dynamic_GKE
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: account.githubdamianaccount
                                                    gitFetchType: Branch
                                                    paths:
                                                        - app.yaml
                                                    repoName: GKE_demo_latam
                                                    branch: master
                                            skipResourceVersioning: false
                                  - manifest:
                                        identifier: valueas
                                        type: Values
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: account.githubdamianaccount
                                                    gitFetchType: Branch
                                                    paths:
                                                        - values.yaml
                                                    repoName: GKE_demo_latam
                                                    branch: master
                              artifacts: {}
                  infrastructure:
                      environmentRef: Desarrollo
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.LATAM_SE
                              namespace: harness-delegate-ng
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                type: JiraCreate
                                name: nuevo ticket
                                identifier: nuevo_ticket
                                spec:
                                    connectorRef: account.JIRADamian
                                    projectKey: HD
                                    issueType: Task
                                    fields:
                                        - name: Summary
                                          value: "Despliegue de aplicaci√≥n - GKE Latam - Release - <+pipeline.sequenceId> "
                                        - name: Description
                                          value: "Despliegue iniciado por Harness!! \\\\ Detalles del Despliegue:  \\\\ Pipeline Name: <+pipeline.name> \\\\Lenguaje: Angular \\\\ Deployment URL: https://app.harness.io/ng/#/account/Io9SR1H7TtGBq9LVyJVB2w/ci/orgs/default/projects/Latam_Arilines/pipelines/kubernetes_v2/executions/<+pipeline.executionId>/pipeline \\\\ Harness executionId: <+pipeline.executionId> \\\\ Harness sequenceId: <+pipeline.sequenceId>"
                                timeout: 1d
                                failureStrategies: []
                          - step:
                                type: JiraUpdate
                                name: inicio dev
                                identifier: inicio_dev
                                spec:
                                    connectorRef: account.JIRADamian
                                    issueKey: <+pipeline.stages.Deploy_Kubernetes.spec.execution.steps.nuevo_ticket.issue.key>
                                    transitionTo:
                                        transitionName: ""
                                        status: In Progress
                                    fields:
                                        - name: Comment
                                          value: Se ha iniciado el proceso de despliegue por harness
                                timeout: 1d
                                failureStrategies: []
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                          - step:
                                type: JiraUpdate
                                name: fin dev
                                identifier: fin_dev
                                spec:
                                    connectorRef: account.JIRADamian
                                    issueKey: <+pipeline.stages.Deploy_Kubernetes.spec.execution.steps.nuevo_ticket.issue.key>
                                    transitionTo:
                                        transitionName: ""
                                        status: Under Review
                                    fields:
                                        - name: Comment
                                          value: Despliegue completoado exitosamente en ambiente DEV
                                timeout: 1d
                                failureStrategies: []
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
              when:
                  pipelineStatus: Success
        - stage:
              name: Deploy Kubernetes QA
              identifier: Deploy_Kubernetes_qa
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      useFromStage:
                          stage: Deploy_Kubernetes
                  infrastructure:
                      environmentRef: QA
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.LATAM_SE
                              namespace: harness-delegate-ng
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                type: JiraUpdate
                                name: fin QA
                                identifier: fin_QA
                                spec:
                                    connectorRef: account.JIRADamian
                                    issueKey: <+pipeline.stages.Deploy_Kubernetes.spec.execution.steps.nuevo_ticket.issue.key>
                                    transitionTo:
                                        transitionName: ""
                                        status: QA Test
                                    fields:
                                        - name: Comment
                                          value: Despliegue completado correctamente en ambiente QA - Inicio de ciclo de pruebas GKE
                                timeout: 1d
                                failureStrategies: []
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
              when:
                  pipelineStatus: Success
        - stage:
              name: Approval Gate
              identifier: JIRA_Approval_Gate
              description: ""
              type: Approval
              spec:
                  execution:
                      steps:
                          - step:
                                name: Jira Approval
                                identifier: jiraApproval
                                type: JiraApproval
                                timeout: 1d
                                spec:
                                    approvalCriteria:
                                        type: KeyValues
                                        spec:
                                            matchAnyCondition: true
                                            conditions:
                                                - key: Status
                                                  operator: equals
                                                  value: Approved
                                    rejectionCriteria:
                                        type: KeyValues
                                        spec:
                                            matchAnyCondition: true
                                            conditions:
                                                - key: Status
                                                  operator: equals
                                                  value: Rejected
                                    connectorRef: account.JIRADamian
                                    projectKey: HD
                                    issueType: Task
                                    issueKey: <+pipeline.stages.Deploy_Kubernetes.spec.execution.steps.nuevo_ticket.issue.key>
                                    delegateSelectors:
                                        - harness-prod
                                failureStrategies: []
                          - step:
                                type: HarnessApproval
                                name: manual approval
                                identifier: manual_approval
                                spec:
                                    approvalMessage: Please review the following information and approve the pipeline progression
                                    includePipelineExecutionHistory: true
                                    approvers:
                                        userGroups:
                                            - Approvers
                                        minimumCount: 1
                                        disallowPipelineExecutor: false
                                    approverInputs: []
                                timeout: 1d
                  serviceDependencies: []
              tags: {}
              failureStrategies: []
        - stage:
              name: Deploy Kubernetes Prod
              identifier: Deploy_Kubernetes_Prod
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: gke_latam_prod
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: deployment
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: account.githubdamianaccount
                                                    gitFetchType: Branch
                                                    paths:
                                                        - /setup/deployment.yaml
                                                    repoName: GKE_demo_latam
                                                    branch: master
                                            skipResourceVersioning: false
                  infrastructure:
                      environmentRef: prod
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.LATAM_SE
                              namespace: prod
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - stepGroup:
                                name: Canary Deployment
                                identifier: canaryDepoyment
                                steps:
                                    - step:
                                          name: Canary Deployment
                                          identifier: canaryDeployment
                                          type: K8sCanaryDeploy
                                          timeout: 10m
                                          spec:
                                              instanceSelection:
                                                  type: Count
                                                  spec:
                                                      count: 1
                                              skipDryRun: false
                                    - step:
                                          type: Verify
                                          name: verify_prod
                                          identifier: verify_prod
                                          spec:
                                              type: Rolling
                                              spec:
                                                  sensitivity: MEDIUM
                                                  duration: 5m
                                                  deploymentTag: <+serviceConfig.artifacts.primary.tag>
                                          timeout: 2h
                                          failureStrategies:
                                              - onFailure:
                                                    errors:
                                                        - Verification
                                                    action:
                                                        type: ManualIntervention
                                                        spec:
                                                            timeout: 2h
                                                            onTimeout:
                                                                action:
                                                                    type: StageRollback
                                              - onFailure:
                                                    errors:
                                                        - Unknown
                                                    action:
                                                        type: ManualIntervention
                                                        spec:
                                                            timeout: 2h
                                                            onTimeout:
                                                                action:
                                                                    type: Ignore
                                    - step:
                                          name: Canary Delete
                                          identifier: canaryDelete
                                          type: K8sCanaryDelete
                                          timeout: 10m
                                          spec: {}
                                rollbackSteps:
                                    - step:
                                          name: Canary Delete
                                          identifier: rollbackCanaryDelete
                                          type: K8sCanaryDelete
                                          timeout: 10m
                                          spec: {}
                          - stepGroup:
                                name: Primary Deployment
                                identifier: Primary_Deployment
                                steps:
                                    - step:
                                          name: Rolling Deployment
                                          identifier: rollingDeployment
                                          type: K8sRollingDeploy
                                          timeout: 10m
                                          spec:
                                              skipDryRun: false
                      rollbackSteps: []
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
