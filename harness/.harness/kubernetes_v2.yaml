pipeline:
    name: kubernetes v2
    identifier: kubernetes_v2
    allowStageExecutions: false
    projectIdentifier: Latam_Arilines
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: account.githubdamianaccount
                repoName: GKE_demo_latam
                build: <+input>
    stages:
        - stage:
              name: Build Kubernetes
              identifier: Build_Kubernetes
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.LATAM_SE
                          namespace: harness-delegate
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: yaml generation
                                identifier: yaml_generation
                                spec:
                                    connectorRef: account.DockerDC
                                    image: badouralix/curl-jq:latest
                                    command: |
                                        #!/bin/bash

                                        echo "Consultando API latam...."
                                        variables_ambiente=$(curl -H "Content-Type: application/json" https://sales-209522-default-rtdb.firebaseio.com/environment/dev.json)
                                        echo $variables_ambiente

                                        puerto=$(curl -H "Content-Type: application/json" https://sales-209522-default-rtdb.firebaseio.com/environment/dev.json | jq -r '.port')
                                        echo $puerto


                                        echo "Generando archivo App.yaml..."
                                        echo "apiVersion: apps/v1
                                        kind: Deployment
                                        metadata:
                                          name: latam-airlines-gke
                                          labels:
                                            app: latam
                                        spec:
                                          selector:
                                            matchLabels:
                                              app: latam
                                          template:
                                            metadata:
                                              labels:
                                                app: latam
                                            spec:
                                              containers:
                                              - image: {{.Values.image}}
                                                name: latam
                                                ports:
                                                - containerPort: {{.Values.port}}" > app.yaml
                                        cat app.yaml


                                        echo "Generando archivo values.yaml..."
                                        echo "name: harness-example
                                        replicas: 1

                                        image: fcuriel/latam:GKE-<+pipeline.sequenceId>
                                        port: $puerto" > values.yaml
                                        cat values.yaml

                                        pwd
                                        ls
                          - step:
                                type: Run
                                name: git commit yaml
                                identifier: git_commit_yaml
                                spec:
                                    connectorRef: account.DockerDC
                                    image: alpine/git:latest
                                    command: |-
                                        echo "Uploading App.yaml generated..."

                                        git config user.email "damian.curiel@harness.io"
                                        git config user.name "damian-curiel"
                                        git add app.yaml
                                        git add values.yaml
                                        git status
                                        git commit -m "Add harness app.yaml and values.yaml file auto-generated"
                                        git remote set-url origin https://<+secrets.getValue("account.git_dc_pat")>@github.com/damian-curiel/GKE_demo_latam.git
                                        git push -u origin master
                          - step:
                                type: Run
                                name: Compile
                                identifier: Compile_Java
                                spec:
                                    connectorRef: account.DockerDC
                                    image: <+input>
                                    command: <+input>
                                when:
                                    stageStatus: Success
                                failureStrategies: []
                          - step:
                                type: RunTests
                                name: Test Intelligence
                                identifier: Test_Intelligence
                                spec:
                                    connectorRef: account.DockerDC
                                    image: maven:3-openjdk-8
                                    language: Java
                                    buildTool: Maven
                                    args: test
                                    packages: hello
                                    runOnlySelectedTests: true
                                    preCommand: cd tests/src/java-module/
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "**/*.xml"
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: Build and push image
                                identifier: Build_and_push_image
                                spec:
                                    connectorRef: account.DockerDC
                                    repo: fcuriel/latam
                                    tags:
                                        - GKE-<+pipeline.sequenceId>
                                failureStrategies: []
              when:
                  pipelineStatus: Success
        - stage:
              name: Deploy Kubernetes Dev
              identifier: Deploy_Kubernetes
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: k8s_sample_app
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: Dynamic_GKE
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: account.githubdamianaccount
                                                    gitFetchType: Branch
                                                    paths:
                                                        - app.yaml
                                                    repoName: GKE_demo_latam
                                                    branch: master
                                            skipResourceVersioning: false
                                  - manifest:
                                        identifier: valueas
                                        type: Values
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: account.githubdamianaccount
                                                    gitFetchType: Branch
                                                    paths:
                                                        - values.yaml
                                                    repoName: GKE_demo_latam
                                                    branch: master
                              artifacts: {}
                  infrastructure:
                      environmentRef: Desarrollo
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.LATAM_SE
                              namespace: harness-delegate
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                type: JiraCreate
                                name: nuevo ticket
                                identifier: nuevo_ticket
                                spec:
                                    delegateSelectors:
                                        - harness-prod
                                    connectorRef: account.JIRADamian
                                    projectKey: HD
                                    issueType: Task
                                    fields:
                                        - name: Summary
                                          value: "Despliegue de aplicación - GKE Latam - Release - <+pipeline.sequenceId> "
                                        - name: Description
                                          value: "Despliegue iniciado por Harness!! \\\\ Detalles del Despliegue:  \\\\ Pipeline Name: <+pipeline.name> \\\\Lenguaje: <+trigger.payload.repository.language> \\\\ Deployment URL: https://app.harness.io/ng/#/account/Io9SR1H7TtGBq9LVyJVB2w/ci/orgs/default/projects/Latam_Arilines/pipelines/kubernetes_v2/executions/<+pipeline.executionId>/pipeline \\\\ Harness executionId: <+pipeline.executionId> \\\\ Harness sequenceId: <+pipeline.sequenceId>"
                                timeout: 1d
                                failureStrategies: []
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
              when:
                  pipelineStatus: Success
        - stage:
              name: Deploy Kubernetes QA
              identifier: Deploy_Kubernetes_qa
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      useFromStage:
                          stage: Deploy_Kubernetes
                  infrastructure:
                      environmentRef: QA
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.LATAM_SE
                              namespace: harness-delegate
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
              when:
                  pipelineStatus: Success
        - stage:
              name: approval gate
              identifier: approval_gate
              description: ""
              type: Approval
              spec:
                  execution:
                      steps:
                          - step:
                                name: Approval
                                identifier: approval
                                type: HarnessApproval
                                timeout: 1d
                                spec:
                                    approvalMessage: |-
                                        Please review the following information
                                        and approve the pipeline progression
                                    includePipelineExecutionHistory: true
                                    approvers:
                                        minimumCount: 1
                                        disallowPipelineExecutor: false
                                        userGroups:
                                            - Approvers
                                    approverInputs: []
              tags: {}
              failureStrategies: []
        - stage:
              name: Deploy Kubernetes Prod
              identifier: Deploy_Kubernetes_prod
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      useFromStage:
                          stage: Deploy_Kubernetes
                  infrastructure:
                      environmentRef: prod
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: account.LATAM_SE
                              namespace: harness-delegate
                              releaseName: release-<+INFRA_KEY>
                      allowSimultaneousDeployments: false
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: false
                          - step:
                                type: Verify
                                name: verify_prod
                                identifier: verify_prod
                                spec:
                                    type: Rolling
                                    spec:
                                        sensitivity: MEDIUM
                                        duration: 5m
                                        deploymentTag: <+serviceConfig.artifacts.primary.tag>
                                timeout: 2h
                                failureStrategies:
                                    - onFailure:
                                          errors:
                                              - Verification
                                          action:
                                              type: ManualIntervention
                                              spec:
                                                  timeout: 2h
                                                  onTimeout:
                                                      action:
                                                          type: StageRollback
                                    - onFailure:
                                          errors:
                                              - Unknown
                                          action:
                                              type: ManualIntervention
                                              spec:
                                                  timeout: 2h
                                                  onTimeout:
                                                      action:
                                                          type: Ignore
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
              when:
                  pipelineStatus: Success
